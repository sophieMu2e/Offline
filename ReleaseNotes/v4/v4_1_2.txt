           Release notes for Mu2e Offline software, v4_1_2

18) February 25, 2014, youzy
    Added moudles for multiple stages Anti-proton simulation.
    Modified files:
      MCDataProducts/inc/GenId.hh
      Mu2eG4/src/constructTS.cc      
    Added Files:
      Analyses/src/SimParticleDumperCompact_module.cc
      Analyses/src/StepPointMCDumperCompact_module.cc
      EventGenerator/src/FromSimParticleCompact_module.cc
      EventGenerator/src/FromSimParticleStartPoint_module.cc
      EventGenerator/src/FromStepPointMCsRotateTarget_module.cc
      Filters/src/FilterStepPointAngleVsTarget_module.cc
      Filters/src/FilterStepPointPositionMomentum_module.cc
      Filters/src/FilterStepPointPzVsTarget_module.cc
      JobConfig/TDR/geom_pbar_s2.txt
      JobConfig/TDR/geom_pbar_s3.txt
      JobConfig/TDR/geom_pbar_s4.txt
      JobConfig/TDR/geom_pbar_s5.txt
      JobConfig/TDR/geom_pbar_s6.txt
      JobConfig/TDR/pbar_s2.fcl
      JobConfig/TDR/pbar_s3.fcl
      JobConfig/TDR/pbar_s4.fcl
      JobConfig/TDR/pbar_s5.fcl
      JobConfig/TDR/pbar_s6.fcl

17) February 25, 2014, youzy
    Added a flag to save all PDG in ntpart of readback output      
    Modified files:
      Analyses/src/ReadVirtualDetector_module.cc

16) February 25, 2014, knoepfel 
    Adjusted SimpleSpectrum functions to be more intuitive.
    SimpleSpectrum::SpectrumType::Flat is no longer truncated at the
    muon endpoint energy.  Also accidentally introduced a proton
    timing bug last time for anyone using FoilParticleGenerator, which
    probably affects no one.

    Modified files:
      EventGenerator/src/DecayInOrbitGun.cc
      EventGenerator/src/FoilParticleGenerator.cc
      Mu2eUtilities/inc/SimpleSpectrum.hh
      Mu2eUtilities/src/SimpleSpectrum.cc

15) February 24, 2014, brownd
    Implemented cross-talk when creating digitizations.
    Updated diagnostics to include cross-talk.  Fixed
    calculation of energy in StrawHit.  Updated
    electronics parameters to correspond more closely to
    current hardware.  Affects:
      TrackerMC, TrackerConditions, TrkPatRec, KalmanTests

14) February 22, 2014, brownd
    Added map between SimParticles and their ultimate parent
    to improve time offset application efficiency.  Updated
    cuts for background rejection in track finding.
    Affects Mu2eUtilities/SimParticleTimeOffsets and
    TrkPatRec/FlagBackgroundHits and TrkPatRec/FlagStrawHits

13) February 21, 2014, brownd
    Improved the efficiency for computing StrawWaveforms from
    StrawHitlets, and in finding threshold crossings.
    Affects TrackerConditions and TrackerMC packages.

12) February 21, 2014, ehrlich
    Added DiskCalorimeter and MCTrajectory to the EventDisplay.
    Modified Files:
      MCDataProducts/inc/MCTrajectory.hh EventDisplay/src/Cone.h 
      EventDisplay/src/ContentSelector.cc 
      EventDisplay/src/ContentSelector.h EventDisplay/src/Cube.h 
      EventDisplay/src/Cylinder.h EventDisplay/src/DataInterface.cc 
      EventDisplay/src/DataInterface.h 
      EventDisplay/src/EventDisplayFrame.cc 
      EventDisplay/src/LinkDef.h EventDisplay/src/Sphere.h 
      EventDisplay/src/Straw.h EventDisplay/src/Track.h 
      EventDisplay/src/VirtualShape.h 
      EventDisplay/src/dict_classes/EventDisplayViewSetup.h 
    Added Files:
      EventDisplay/src/Hexagon.h 
      EventDisplay/src/dict_classes/EventDisplayGeoVolumePgon.h 

11) February 18, 2013 knoepfel

    Include out-of-time POT pulse from Eric Prebys.  Significantly
    adjust ProtonPulseRandPDF class to accommodate changes.

    New files:
      ConditionsService/data/OutOfTimeSpectrum.txt
    Modified files:
      HitMakers/src/GenerateProtonTimes_module.cc
      Mu2eUtilities/inc/ProtonPulseRandPDF.hh
      Mu2eUtilities/src/ProtonPulseRandPDF.cc

10) February 14, 2013 knoepfel

    Correct pbar window bug.  Vacuum wall now created in addition to
    wedge.

    Modified files:
      Mu2eG4/src/constructTS.cc
      Mu2eG4/test/TransportSolenoid_v01.txt

 9) February 13, 2014 knoepfel

    Add free function to GeneralUtilities to convert vector of
    std::string's to vector of art::InputTag's.  Modify how event
    weights are handled in ReadKalFits_module.cc.

    New files:
      GeneralUtilities/inc/artHelper.hh
      GeneralUtilities/src/artHelper.cc
      EventGenerator/src/DecayInOrbitWeight_module.cc
    Modified file:
      KalmanTests/src/ReadKalFits_module.cc

 8) February 13, 2014 ehrlich
    Updated the CRV geometry to the numbers in doc-db 3433-v4
    Increased the width (x-direction) of the DS hall
    Modified Files:
    CosmicRayShieldGeom/inc/CosmicRayShieldMaker.hh 
    CosmicRayShieldGeom/src/CosmicRayShieldMaker.cc 
    Mu2eG4/test/geom_01.txt 
    Added Files:
    Mu2eG4/test/crv_counters.txt 

 7) February 10, 2014 ehrlich
    Added aluminum sheets as absorber between CRV counters
    Removed TSL CRV shield
    CosmicRayShieldGeom
    Mu2eG4/test/geom_01.txt
    Mu2eG4/src/constructCRV.cc

 6) February 5, 2014 knoepfel

    Add new random number-pair generator that uses the accept/reject
    method.  Add spectra for pion studies.

    New files:
      Mu2eUtilities/inc/Random2Dpair.hh
      Mu2eUtilities/inc/PionCaptureSpectrum.hh
      Mu2eUtilities/src/PionCaptureSpectrum.cc

 5) January 27, 2014 knoepfel
    
    Add new POT pulse shape (in time), and add the AC dipole
    transmission function.  Significantly update ProtonPulseRandPDF to
    take advantage of the Table class, and remove unncessary boiler
    plate code.  Switch to "at" syntax in Table class now that g++
    compilation optimization bug has been fixed.  Diff between the
    previous version of Table.hh for details.

    New files:
      ConditionsService/data/ACdipoleTransmissionFunction.txt
      ConditionsService/data/ProtonPulseSpectrum_02.txt

    Modified files:
      EventGenerator/src/BremElectronGun.cc
      EventGenerator/src/ConversionGun.cc
      EventGenerator/src/DecayInOrbitGun.cc
      EventGenerator/src/EjectedNeutronGun.cc
      EventGenerator/src/EjectedPhotonGun.cc
      EventGenerator/src/EjectedProtonGun.cc
      EventGenerator/src/FoilParticleGenerator.cc
      EventGenerator/src/PiCapture.cc
      EventGenerator/src/StoppedMuonGun.cc
      Mu2eUtilities/inc/ProtonPulseRandPDF.hh
      Mu2eUtilities/inc/Table.hh
      Mu2eUtilities/src/ProtonPulseRandPDF.cc

 4) January 20, 2014 kutschke
    The previous few changes left the geometry file variables that control mcTrajectory and pointTrajectory saving in a mixed up state.
    This has been cleaned up.  The variables that now are used are:

    double g4.saveTrajectoryMomentumCut = 50.;
      - If a track has a starting mometum above this cut, G4 will save the 3-position of every point on the trajectory.
      - This controls G4 graphics.
      - This indirectly controls saving of PointTrajectories because these are copied from the G4 graphics buffer.
      - previously g4.pointTrajectoryMomentumCut was used for this purpose - the name has been changed since pointTrajectory
        objects will soon go away but we want to still be able to control G4 graphics.

    int g4.pointTrajectoryMinSteps  =  5;
      - A new variable. PointTrajectories are saved if they have at least this many steps..
      - This will soon become obsolete - it was renamed to make it easy to find and remove when the time comes.

    double g4.mcTrajectoryMomentumCut = 50.;
    int    g4.mcTrajectoryMinSteps    =  5;
       - These strictly control the saving of MCTrajectory objects.  They do not control G4 graphics.
       - These will stay for the long term.

    The defaults have been set that no default behaviour changes.

    Files changed:
       Mu2eG4/src/StudyTrackingAction.cc
       Mu2eG4/inc/StudyTrackingAction.hh
       Mu2eG4/src/G4_module.cc
       Mu2eG4/src/TrackingAction.cc
       Mu2eG4/inc/TrackingAction.hh
       Mu2eG4/test/geom_01.txt
 
 3) January 17, 2014 kutschke
    The old style PointTrajectoryCollection data product now
    obeys the following parameter from the geometry file:

     int g4.mcTrajectoryMinSteps = 5;

    Files changed:

      Mu2eG4/src/G4_module.cc
      Mu2eG4/inc/addPointTrajectories.hh
      Mu2eG4/src/addPointTrajectories.cc

 2) January 17, 2014 kutschke
    New class that will supercede PointTrajectoryCollection.
    For now, keep the PointTrajectoryCollection objects too.
      MCDataProducts/inc/MCTrajectory.hh
      MCDataProducts/inc/MCTrajectoryCollection.hh

    The genreflex stuff for the new class:
      MCDataProducts/src/classes_def.xml
      MCDataProducts/src/classes.h

    Code to create the new data product:
       Mu2eG4/src/G4_module.cc
       Mu2eG4/inc/SteppingAction.hh
       Mu2eG4/inc/TrackingAction.hh
       Mu2eG4/src/SteppingAction.cc
       Mu2eG4/src/TrackingAction.cc

    There is a new geometry file parameter:

     int g4.mcTrajectoryMinSteps = 5;

    Only MCTrajectories with more than this many steps are stored.

    The existing parameter geometry file parameter:

      double g4.pointTrajectoryMomentumCut = 50.

    also controls which MCTrajectory objects are written to the
    data products.  Only objects for SimParticles born with more
    than this momentum are written.

    Yeah, the names are weird.  But the g4.PointTrajectory names will
    get renamed to g4.MCTrajectory once we get rid of PointTrajectory.

    Readback the data product, put it into an ntuple and
    draw some event pictures.  Uses the output file from
    g4test_03.fcl
       Analyses/test/readMCTrajectories.cint
       Analyses/src/ReadMCTrajectories_module.cc
       Analyses/test/readMCTrajectories.fcl

 1) January 17, 2014 kutschke
    Add helper class to read .fcl file and turn it into a parameter set.
      GeneralUtilities/inc/ParameterSetFromFile.hh
      GeneralUtilities/src/ParameterSetFromFile.cc

    Code to test it:
       Sandbox/src/StandAloneParameterSet_module.cc
       Sandbox/test/standAlonePSet.fcl
       Sandbox/test/example.fcl
