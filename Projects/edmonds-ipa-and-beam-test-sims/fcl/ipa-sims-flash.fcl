#include "JobConfig/cd3/beam/beam_g4s4_flash.fcl" 
# Mostly use what was done in the above, except...

# ...change the process name
process_name: IpaSimsFlash

source.fileNames   : [ "sim.mu2e.cd3-beam-g4s4-detflash.0918a.001002_00210003.art" ]

# ...change the output file names
services.TFileService.fileName: "nts.ipa-sims-flash.root"
outputs.detectorOutput.fileName: "sim.ipa-sims-flash.detOutput.art"
outputs.crvOutput.fileName: "sim.ipa-sims-flash.detOutput.art"
outputs.truncatedEvtsOutput.fileName: "sim.ipa-sims-flash.truncatedOutput.art"

# ...add the new TrkPatRec module, but...
# ...first, need the BTrkHelper service
services.BTrkHelper : @local::BTrkHelperDefault
# ...second, need to be able to add times due to the primary protons and the stopped muons
physics.producers.protonTimeMap: { module_type : GenerateProtonTimes }
#physics.producers.muonTimeMap: { module_type : GenerateMuonLife }

# ...third, need to add the Tracking.producers so we can call them later
physics.producers : { @table::physics.producers  @table::Tracking.producers }
physics.producers.makeSH.diagLevel : 3
physics.producers.makeSD.TimeOffsets : { inputs : [ ] }

# make sure we get all the flash hits
services.ConditionsService.StrawElectronics.FlashEnd : 1
physics.producers.FSHPreStereo.minimumTime : 1
physics.producers.FlagStrawHits.minimumTime : 1

physics.producers.TRFDeM.diagLevel : 3
physics.producers.TRFDeM.KalDiag : { MCPtrLabel : "makeSH" 
					      	  MCStepsLabel : "detectorFilter"
						  SimParticleLabel : "detectorFilter"
						  SimParticleInstance : ""
						  StrawHitMCLabel : "makeSH"
						  TimeOffsets :  { inputs : [ "protonTimeMap" ] }
						  diagLevel : 3
						}


# ...now we can add everything to the detPath
physics.myPath : [ protonTimeMap, @sequence::Tracking.DigiSim, @sequence::Tracking.TPRDeM ]
physics.trigger_paths : [ myPath ]

# ...add any analyzer modules we want...
physics.analyzers.dumpGen : { module_type : GenParticlesAnalyzer
			      inputs : "generate"
			    }

physics.analyzers.stepPointDump : { module_type : StepPointMCDumper
				    hitsInputTag : "detectorFilter:tracker"
				    TimeOffsets : { inputs : [ "protonTimeMap" ] }
				  }

physics.analyzers.genCountLogger : { module_type : GenEventCountReader
				   }

# ...and append them to the end_paths
physics.extrapaths : [ dumpGen, genCountLogger, stepPointDump ]
physics.end_paths : [ extrapaths ]